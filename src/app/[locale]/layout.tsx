import type { Metadata } from "next";
import Provider from "../components/provider/Provider";
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";
import "odometer/themes/odometer-theme-default.css";
import "../style/main.scss";
import localFont from "next/font/local";

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

const poppins = localFont({
    src: [
        {
            path: "../../../public/fonts/Poppins/Poppins-Regular.ttf",
            weight: "400",
            style: "normal",
        },
        {
            path: "../../../public/fonts/Poppins/Poppins-Medium.ttf",
            weight: "500",
            style: "normal",
        },
        {
            path: "../../../public/fonts/Poppins/Poppins-SemiBold.ttf",
            weight: "600",
            style: "normal",
        },
        {
            path: "../../../public/fonts/Poppins/Poppins-Bold.ttf",
            weight: "700",
            style: "normal",
        },
    ],
    variable: "--poppins-font",
});

const Kufi = localFont({
    src: [
        {
            path: "../../../public/fonts/kufi/NotoKufiArabic-Regular.ttf",
            weight: "400",
            style: "normal",
        },
        {
            path: "../../../public/fonts/kufi/NotoKufiArabic-Medium.ttf",
            weight: "500",
            style: "normal",
        },
        {
            path: "../../../public/fonts/kufi/NotoKufiArabic-SemiBold.ttf",
            weight: "600",
            style: "normal",
        },
    ],
    variable: "--kufi-font",
});

export default async function RootLayout({
    children,
    params,
}: Readonly<{
    children: React.ReactNode;
    params: { locale: string };
}>) {
    const messages = await getMessages();
    const { locale } = await params;

    return (
        <html lang={locale} dir={locale === "ar" ? "rtl" : "ltr"} className={`${poppins.variable} ${Kufi.variable}`} suppressHydrationWarning>
            <body>
                <NextIntlClientProvider messages={messages}>
                    <Provider>{children}</Provider>
                </NextIntlClientProvider>
            </body>
        </html>
    );
}
